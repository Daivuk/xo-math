//
// Comparison file for generating feature-accuracy tests.
// Rather than defining a test suite that compares known results
// this instead compares the results of a set of known libraries
// and finds the differences in their outputs
//

//
//#lib_name_short
//	Description
//	unique_prefix
//	vec3type
//		get access x
//		get access y
//		get access z
//		set access x
//		set access y
//		set access z

//	Readable Test Name
//		lib_name_short<function signature>
//			function body, last line is assumed as the return.
//			v3a and v3b are vectors of your type
//			f is a random float
//
//	!!	lib_short_name of library missing a definition for this test
//		optional description why it's missing this definition
//

#xomath
	xo-math by Jared Thomson
	xo
	xo::math::Vector3
		.x
		.y
		.z
		.x
		.y
		.z

#bullet
	Bullet Linear Math by Bullet Physics
	bt
	btVector3
		[0]
		[1]
		[2]
		[0]
		[1]
		[2]

#vectorclasses
	Vector Classes by Agner Fog
	vc
	Vec3f
		[0]
		[1]
		[2]
		[0]
		[1]
		[2]

#scevectormath
	Vector math library by Sony Computer Entertainment
	sce
	Vec3f
		[0]
		[1]
		[2]
		[0]
		[1]
		[2]

////////////////////////////////////////////////// vec op vec
addition
	xomath<fvv>
		v3a + v3b
	bullet<fvv>
		v3a + v3b
	vectorclasses<fvv>
		v3a + v3b

subtraction
	xomath<fvv>
		v3a - v3b
	bullet<fvv>
		v3a - v3b
	vectorclasses
		v3a - v3b

multiplication
	xomath<fvv>
		v3a * v3b
	bullet<fvv>
		v3a * v3b
	vectorclasses<fvv>
		v3a * v3b

division
	xomath<fvv>
		v3a / v3b
	bullet<fvv>
		v3a / v3b
	vectorclasses<fvv>
		v3a / v3b

////////////////////////////////////////////////// vec op eq vec

addition equals
	xomath<fvv>
		v3a += v3b
	bullet<fvv>
		v3a += v3b
	vectorclasses<fvv>
		v3a += v3b

subtraction equals
	xomath<fvv>
		v3a -= v3b
	bullet<fvv>
		v3a -= v3b
	vectorclasses<fvv>
		v3a -= v3b

multiplication equals
	xomath<fvv>
		v3a *= v3b
	bullet<fvv>
		v3a *= v3b
	vectorclasses<fvv>
		v3a *= v3b

division equals
	xomath<fvv>
		v3a /= v3b
!!	bullet
	vectorclasses<fvv>
		v3a /= v3b

////////////////////////////////////////////////// vec op float

addition scalar
	xomath<fvf>
		v3a + t
	bullet<fvf>
		v3a + t
	vectorclasses<fvf>
		v3a + t

subtraction scalar
	xomath<fvf>
		v3a - t
	bullet<fvf>
		v3a - t
	vectorclasses
		v3a - v3b

multiplication scalar
	xomath<fvf>
		v3a * t
	bullet<fvf>
		v3a * t
	vectorclasses<fvf>
		v3a * t

division scalar
	xomath<fvf>
		v3a / t
	bullet<fvf>
		v3a / t
	vectorclasses<fvf>
		v3a / t

////////////////////////////////////////////////// vec op eq float

addition equals scalar
	xomath<fvf>
		v3a += f
	bullet<fvf>
		v3a += f
	vectorclasses<fvf>
		v3a += f

subtraction equals scalar
	xomath<fvf>
		v3a -= f
	bullet<fvf>
		v3a -= f
	vectorclasses<fvf>
		v3a -= f

multiplication equals scalar
	xomath<fvf>
		v3a *= f
	bullet<fvf>
		v3a *= f
	vectorclasses<fvf>
		v3a *= f

division equals scalar
	xomath<fvf>
		v3a /= f
	bullet<fvf>
		v3a /= f
	vectorclasses<fvf>
		v3a /= f

////////////////////////////////////////////////// vec compare vec

length less than
	xomath<bvv>
		v3a < v3b
!!	bullet
		Note: Bullet will compare two vectors, but it will just be comparing the addresses of the vectors.
!!	vectorclasses
		Vector Classes compares vectors against each element, not by magnitude.

length greater than 
	xomath<bvv>
		v3a > v3b
!!	bullet
!!	vectorclasses

length less than or equal to
	xomath<bvv>
		v3a <= v3b
!!	bullet
		Note: Bullet will compare two vectors, but it will just be comparing the addresses of the vectors.
!!	vectorclasses
		Vector Classes compares vectors against each element, not by magnitude.

length greater than or equal to
	xomath<bvv>
		v3a >= v3b
!!	bullet
		Note: Bullet will compare two vectors, but it will just be comparing the addresses of the vectors.
!!	vectorclasses
		Vector Classes compares vectors against each element, not by magnitude.

length equal to
	xomath<bvv>
		v3a == v3b
	bullet<bvv>
		v3a == v3b
!!	vectorclasses
		Vector Classes compares vectors for equality across all elements, not together or by length.

length not equal to
	xomath<bvv>
		v3a != v3b
	bullet<bvv>
		v3a != v3b
!!	vectorclasses
		Vector Classes compares vectors for equality across all elements, not together or by length.

////////////////////////////////////////////////// product

dot product
	xomath<fvv>
		v3a.Dot(v3b)
	bullet<fvv>
		v3a.dot(v3b)
	vectorclasses<fvv>
		dot_product(a, v3b)

cross product
	xomath<vvv>
		v3a.Cross(v3b)
	bullet<vvv>
		v3a.cross(v3b)
	vectorclasses<vvv>
		cross_product(a, v3b)

////////////////////////////////////////////////// utilities

Angle between
	xomath<fvv>
		v3a.Angle(v3b)
	bullet<fvv>
		v3a.angle(v3b)
!!	vectorclasses<fvv>

Distance
	xomath<fvv>
		v3a.Distance(v3b)
	bullet<fvv>
		v3a.distance(v3b)
!!	vectorclasses

DistanceSquared
	xomath<fvv>
		v3a.DistanceSquared(v3b)
	bullet<fvv>
		v3a.distance2(v3b)
!!	vectorclasses

Lerp
	xomath<fvvf>
		v3a.Lerp(v3b, f)
	bullet<fvvf>
		v3a.lerp(v3b, f)
!!	vectorclasses

Rotate
	xomath<fvvf>
		v3a.RotateRadians(v3b, f)
	bullet<fvvf>
		v3a.rotate(v3b, f)
!!	vectorclasses